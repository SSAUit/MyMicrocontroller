<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MyMicrocontroller.Themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <!-- Expander -->
    <Style TargetType="{x:Type ToggleButton}" x:Key="ExpanderDownHeaderStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="0" x:Name="border">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Check" Background="Transparent" RenderTransformOrigin="0.5,0.5" BorderThickness="0">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource ControlActiveBorderBrush}" Width="20" Height="20" StrokeThickness="2"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Path x:Name="arrow" Fill="{StaticResource ControlForeground}" Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" Margin="4,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value=".6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="0" To="180" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="180" To="360" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="0" x:Name="border">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <RotateTransform Angle="-90"/>
                            </Grid.LayoutTransform>
                            <Border x:Name="Check" Background="Transparent" RenderTransformOrigin="0.5,0.5" Grid.Column="2">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource ControlActiveBorderBrush}" Width="20" Height="20" StrokeThickness="2"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Path x:Name="arrow" Fill="{StaticResource ControlForeground}" Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,3,0,3" Grid.Column="1" VerticalAlignment="Top" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="90"/>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value=".6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="0" To="180" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="180" To="360" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="0" x:Name="border">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="Check" Background="Transparent" RenderTransformOrigin="0.5,0.5">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource ControlActiveBorderBrush}" Width="20" Height="20" StrokeThickness="2"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Path x:Name="arrow" Fill="{StaticResource ControlForeground}" Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="180"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,3,0,3" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value=".6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="180" To="360" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="0" To="180" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForeground}"/>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Content" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                            To="{StaticResource ColorForegroundWhite}"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent" BorderThickness="0" x:Name="border">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </Grid.LayoutTransform>
                            <Border x:Name="Check" Background="Transparent" RenderTransformOrigin="0.5,0.5" Grid.Column="0">
                                <Grid>
                                    <Ellipse x:Name="ellipse" Stroke="{StaticResource ControlActiveBorderBrush}" Width="20" Height="20" StrokeThickness="2"
                                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Path x:Name="arrow" Fill="{StaticResource ControlForeground}" Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" 
                                          HorizontalAlignment="Center"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <RotateTransform x:Name="rotate" Angle="0"/>
                                </Border.RenderTransform>
                            </Border>
                            <ContentPresenter x:Name="Content" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,3,0,3" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <RotateTransform Angle="-90"/>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Opacity" Value="0.82"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}"/>
                            <Setter Property="Opacity" TargetName="ellipse" Value=".6"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="0" To="180" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Angle">
                                        <DoubleAnimation Duration="0:0:1" From="180" To="360" Storyboard.TargetName="rotate" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ControlForegroundWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                        <DockPanel>
                            <ToggleButton x:Name="ToggleButtonExpander" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" 
                                          FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" 
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource FocusLine}" 
                                          Margin="1,1,1,0" MinHeight="0" MinWidth="0" Style="{StaticResource ExpanderDownHeaderStyle}" 
                                          Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top"
                                          />
                            <Grid Visibility="Collapsed" x:Name="grid" Margin="5,0,0,0">
                                <Border x:Name="border" Background="{StaticResource ControlLightBackground}" BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" CornerRadius="5" Margin="0"/>
                                <ContentPresenter x:Name="ContentExpander" Focusable="False" HorizontalAlignment="Left" Margin="5" VerticalAlignment="Top" DockPanel.Dock="Bottom" />
                                <Grid.OpacityMask>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="Black"/>
                                        <GradientStop x:Name="grstop_opacity" Offset="0.05" Color="Transparent"/>
                                    </LinearGradientBrush>
                                </Grid.OpacityMask>
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="grstop_opacity" Storyboard.TargetProperty="Offset">
                                        <DoubleAnimation Duration="0:0:1.5" From="0.05" To="3" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:1.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetName="grstop_opacity" Storyboard.TargetProperty="Offset">
                                        <DoubleAnimation Duration="0:0:1.5" From="3" To="0.05" />
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1.5"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down" >
                            <Setter Property="Margin" TargetName="grid" Value="1,0,1,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground2}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ContentExpander" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="ToggleButtonExpander" Value="Left" />
                            <Setter Property="Style" TargetName="ToggleButtonExpander" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundExpanderRight}"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,1,0,1"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ContentExpander" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="ToggleButtonExpander" Value="Bottom" />
                            <Setter Property="Style" TargetName="ToggleButtonExpander" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundExpanderBottom}"/>
                            <Setter Property="Margin" TargetName="grid" Value="1,0,1,0"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ContentExpander" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="ToggleButtonExpander" Value="Right" />
                            <Setter Property="Style" TargetName="ToggleButtonExpander" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter Property="Background" TargetName="border" Value="{StaticResource BackgroundExpanderLeft}"/>
                            <Setter Property="Margin" TargetName="grid" Value="0,1,0,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>